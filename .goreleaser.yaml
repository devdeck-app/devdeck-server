version: 2
project_name: devdeck-server

builds:
  - main: .
    goos: [darwin]
    goarch: [amd64, arm64]
    ldflags:
      - -s -w -X main.version={{.Version}}

archives:
  - formats: ["tar.gz"]
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    files:
      - LICENSE
      - README.md

brews:
  - name: devdeck-server
    directory: Formula
    homepage: "https://github.com/devdeck-app/devdeck-server"
    commit_author:
      name: Github Actions
      email: actions@github.com
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"
    repository:
      owner: devdeck-app
      name: homebrew-devdeck-server
      branch: master
      token: "{{ .Env.GITHUB_TOKEN }}"
    description: "DevDeck server for the DevDeck mobile app"
    license: MIT
    install: |
      bin.install "devdeck-server"
    service: |
      run [opt_bin]/"devdeck-server"
      keep_alive true
    test: |
      require "timeout"
      pid = fork do
        exec "#{bin}/devdeck-server"
      end
      sleep 2
      assert_predicate Process.kill(0, pid), :==, 1
      Process.kill("TERM", pid)
      Process.wait(pid)
# brews:
#   - name: observiq-otel-collector
#   tap:
#     owner: observIQ
#     name: homebrew-observiq-otel-collector branch: main download_strategy: CurlDownloadStrategy folder: Formula url_template: https://github.com/observIQ/observiq-otel-collector/releases/download/{{ .Tag }}/{{ .ArtifactName }} commit_author: name: observiq email: support@observiq.com homepage: "https://github.com/observIQ/observiq-otel-collector" license: "Apache 2.0" caveats: | **************************************************************** The configuration file that is run by the service is located at #{prefix}/config.yaml. If you are configuring a logreceiver the plugin directory is located at #{prefix}/plugins. **************************************************************** **************************************************************** Below are services commands to run to manage the collector service. If you wish to run the collector at boot prefix these commands with sudo otherwise the service will run at login. To start the collector service run: brew services start observiq/observiq-otel-collector/observiq-otel-collector To stop the collector service run: brew services stop observiq/observiq-otel-collector/observiq-otel-collector To restart the collector service run: brew services restart observiq/observiq-otel-collector/observiq-otel-collector **************************************************************** **************************************************************** To uninstall the collector and its dependencies run the following commands: brew services stop observiq/observiq-otel-collector/observiq-otel-collector brew uninstall observiq/observiq-otel-collector/observiq-otel-collector launchctl remove com.observiq.collector # If you moved the opentelemetry-java-contrib-jmx-metrics.jar sudo rm /opt/opentelemetry-java-contrib-jmx-metrics.jar **************************************************************** install: | bin.install "observiq-otel-collector" prefix.install "LICENSE", "config.yaml" prefix.install Dir["plugins"] lib.install "opentelemetry-java-contrib-jmx-metrics.jar" service: | run [opt_bin/"observiq-otel-collector", "--config", opt_prefix/"config.yaml"] environment_variables OIQ_OTEL_COLLECTOR_HOME: opt_prefix keep_alive true
changelog:
  use: github
